import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Bot, CheckCircle, Clock, AlertCircle } from "lucide-react";
import { motion } from "framer-motion";

export default function AgentCard({ 
  agent, 
  status = "pending", 
  result = null, 
  isProcessing = false 
}) {
  const statusConfig = {
    pending: { icon: Clock, color: "bg-slate-100 text-slate-600", iconColor: "text-slate-400" },
    processing: { icon: Clock, color: "bg-blue-100 text-blue-700", iconColor: "text-blue-500" },
    completed: { icon: CheckCircle, color: "bg-emerald-100 text-emerald-700", iconColor: "text-emerald-500" },
    error: { icon: AlertCircle, color: "bg-red-100 text-red-700", iconColor: "text-red-500" }
  };

  const StatusIcon = statusConfig[status]?.icon || Clock;

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
    >
      <Card className={`transition-all duration-300 ${
        status === "processing" ? "ring-2 ring-blue-200 shadow-lg" : "shadow-sm"
      } bg-white/70 backdrop-blur-sm border-slate-200/60`}>
        <CardHeader className="pb-3">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className={`w-10 h-10 rounded-xl flex items-center justify-center ${
                agent.color || "bg-slate-100"
              }`}>
                <Bot className="w-5 h-5 text-white" />
              </div>
              <div>
                <CardTitle className="text-lg font-semibold text-slate-800">
                  {agent.name}
                </CardTitle>
                <p className="text-sm text-slate-500 mt-1">{agent.description}</p>
              </div>
            </div>
            <Badge className={`${statusConfig[status]?.color} border-0`}>
              <StatusIcon className={`w-3 h-3 mr-1 ${statusConfig[status]?.iconColor}`} />
              {status.charAt(0).toUpperCase() + status.slice(1)}
            </Badge>
          </div>
        </CardHeader>
        
        <CardContent>
          {isProcessing && (
            <div className="flex items-center gap-2 mb-4">
              <div className="animate-spin w-4 h-4 border-2 border-blue-200 border-t-blue-600 rounded-full" />
              <span className="text-sm text-blue-600 font-medium">Processing...</span>
            </div>
          )}
          
          {result && (
            <div className="bg-slate-50 rounded-lg p-4 border border-slate-200/60">
              <h4 className="font-medium text-slate-800 mb-2">Result:</h4>
              <div className="text-sm text-slate-700 whitespace-pre-wrap leading-relaxed">
                {result}
              </div>
            </div>
          )}
          
          {!result && !isProcessing && status === "pending" && (
            <div className="text-sm text-slate-500 italic">
              Waiting to process...
            </div>
          )}
        </CardContent>
      </Card>
    </motion.div>
  );
}
